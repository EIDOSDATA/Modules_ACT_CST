/*
 * biz_main.c
 *
 *  Created on: Mar 20, 2024
 *      Author: admin
 */
#include "stdio.h"
#include "stdint.h"

#include "adc.h"
#include "tim.h"

#include "main.h"
#include "biz_uart.h"
#include "biz_main.h"


uint8_t check_dispose(void);
#define Sensitivity  8


uint32_t sensor1;
uint32_t sensor2;
uint32_t sensor3;
uint32_t sensor4;

__IO uint16_t adc_buffer_ch[4];


uint32_t sensor_count;
uint8_t ref;

uint8_t dispose;
uint16_t sen_ref1;
uint16_t sen_ref2;
uint16_t sen_ref3;
uint16_t sen_ref4;

uint32_t mean_ch0;
uint32_t mean_ch1;
uint32_t mean_ch2;
uint32_t mean_ch3;


void Dispense (void)
{
	printf(">>Switch1 pushed!!\r\n");
	printf(">>Motor On!!\r\n");
	dispose = 0;
	for(int i=0; i<2000; i++)
	{
	  HAL_GPIO_WritePin(LED_RED_GPIO_Port,LED_RED_Pin,RESET);//ON
	  HAL_GPIO_WritePin(MOTOR_GPIO_Port,MOTOR_Pin,RESET);//ON

	  if(check_dispose())
		  break;

	}

	  HAL_GPIO_WritePin(MOTOR_GPIO_Port,MOTOR_Pin,SET);//OFF
	  HAL_GPIO_WritePin(LED_RED_GPIO_Port,LED_RED_Pin,SET);//OFF
	  dispose = 0;
	  printf(">>Motor Off!!\r\n");

}



void Sensor_On(void)
{
	  HAL_GPIO_WritePin(PHOTO_PULSE0_GPIO_Port,PHOTO_PULSE0_Pin,SET);//ON
	  HAL_GPIO_WritePin(PHOTO_PULSE1_GPIO_Port,PHOTO_PULSE1_Pin,SET);//ON
	  HAL_GPIO_WritePin(PHOTO_PULSE2_GPIO_Port,PHOTO_PULSE2_Pin,SET);//ON
	  HAL_GPIO_WritePin(PHOTO_PULSE3_GPIO_Port,PHOTO_PULSE3_Pin,SET);//ON

	  HAL_GPIO_WritePin(IR_PULSE0_GPIO_Port,IR_PULSE0_Pin,RESET);//ON
	  HAL_GPIO_WritePin(IR_PULSE1_GPIO_Port,IR_PULSE1_Pin,RESET);//ON
	  HAL_GPIO_WritePin(IR_PULSE2_GPIO_Port,IR_PULSE2_Pin,RESET);//ON
	  HAL_GPIO_WritePin(IR_PULSE3_GPIO_Port,IR_PULSE3_Pin,RESET);//ON


}

void Sensor_Off(void)
{


	  HAL_GPIO_WritePin(PHOTO_PULSE0_GPIO_Port,PHOTO_PULSE0_Pin,RESET);//OFF
	  HAL_GPIO_WritePin(PHOTO_PULSE1_GPIO_Port,PHOTO_PULSE1_Pin,RESET);//OFF
	  HAL_GPIO_WritePin(PHOTO_PULSE2_GPIO_Port,PHOTO_PULSE2_Pin,RESET);//OFF
	  HAL_GPIO_WritePin(PHOTO_PULSE3_GPIO_Port,PHOTO_PULSE3_Pin,RESET);//OFF

	  HAL_GPIO_WritePin(IR_PULSE0_GPIO_Port,IR_PULSE0_Pin,SET);//OFF
	  HAL_GPIO_WritePin(IR_PULSE1_GPIO_Port,IR_PULSE1_Pin,SET);//OFF
	  HAL_GPIO_WritePin(IR_PULSE2_GPIO_Port,IR_PULSE2_Pin,SET);//OFF
	  HAL_GPIO_WritePin(IR_PULSE3_GPIO_Port,IR_PULSE3_Pin,SET);//OFF


}

void get_sensor(void)
{
	uint16_t number = 20;

	mean_ch0 = 0;
	mean_ch1 = 0;
	mean_ch2 = 0;
	mean_ch3 = 0;

	uint32_t sum_ch0 = 0;
	uint32_t sum_ch1 = 0;
	uint32_t sum_ch2 = 0;
	uint32_t sum_ch3 = 0;

	for(int i =0; i<number; i++)
	{
		Sensor_On();
		HAL_ADC_Start_DMA(&hadc,(uint16_t *)adc_buffer_ch,4);
		delay_nop(10);
		Sensor_Off();

		sum_ch0 += adc_buffer_ch[0];
		sum_ch1 += adc_buffer_ch[1];
		sum_ch2 += adc_buffer_ch[2];
		sum_ch3 += adc_buffer_ch[3];

		delay_nop(100);
	}

	mean_ch0 = sum_ch0 /number;
	mean_ch1 = sum_ch1 /number;
	mean_ch2 = sum_ch2 /number;
	mean_ch3 = sum_ch3 /number;


	if(ref==1)
	{
		sen_ref1 = mean_ch0;
		sen_ref2 = mean_ch1;
		sen_ref3 = mean_ch2;
		sen_ref4 = mean_ch3;
	}

}

void delay_nop(unsigned int cnt)
{
	for(int i=0; i<cnt; i++)
	{
		DUMMY();
	}

}
void DUMMY(void)
{
	int dummy=1;
	//if(dummy == 1) dummy=0;
}

uint8_t check_dispose(void)
{
	  if(mean_ch0 > (sen_ref1 + Sensitivity))
	  {
		  dispose = 1;
		  printf(">>sensor1 high detect!!\r\n");
		  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);
		  printf("sensor_1:%d\r\n",mean_ch0);


	  }
	  else if(mean_ch0< (sen_ref1 - Sensitivity))
	  {
		  dispose = 1;
		  printf(">>sensor1 low detect!!\r\n");
		  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);
		  printf("sensor_1:%d\r\n",mean_ch0);


	  }
	  else if(mean_ch1 > sen_ref2 + Sensitivity)
	  {
		  dispose = 1;
		  printf(">>sensor2 high detect!!\r\n");
		  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);
		  printf("sensor_2:%d\r\n",mean_ch1);


	  }
	  else if(mean_ch1 < sen_ref2  - Sensitivity)
	  {
		  dispose = 1;
		  printf(">>sensor2 low detect!!\r\n");
		  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);
		  printf("sensor_2:%d\r\n",mean_ch1);


	  }
	  else if(mean_ch2 > sen_ref3 + Sensitivity)
	  {
		  dispose = 1;
		  printf(">>sensor3 high detect!!\r\n");
		  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);
		  printf("sensor_3:%d\r\n",mean_ch2);


	  }
	  else if(mean_ch2 < sen_ref3 - Sensitivity)
	  {
		  dispose = 1;
		  printf(">>sensor3 low detect!!\r\n");
		  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);
		  printf("sensor_3:%d\r\n",mean_ch2);


	  }

	  else if(mean_ch3 > sen_ref4 + Sensitivity)
	  {
		  dispose = 1;
		  printf(">>sensor4 high detect!!\r\n");
		  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);
		  printf("sensor_4:%d\r\n",mean_ch3);


	  }
	  else if(mean_ch3 < sen_ref4 - Sensitivity)
	  {
		  dispose = 1;
		  printf(">>sensor4 low detect!!\r\n");
		  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);
		  printf("sensor_4:%d\r\n",mean_ch3);


	  }
	  else
	  {
		  printf("sensor_1:%d, sensor_2:%d, sensor_3:%d, sensor_4:%d\r\n",mean_ch0,mean_ch1,mean_ch2,mean_ch3);
		  delay_nop(1);
	  }
	  return dispose;
}
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim2)
{
	get_sensor();
}


void Cmd_Runner(void)
{

#if 1
	printf("\r\nPasser END \r\n");
	printf("Addr = 0x%04X \r\n",Packet.Addr);
	printf("Cmd = 0x%04X \r\n",Packet.CMD);
	printf("LEN = %d [dec]\r\n",Packet.Data_len);
	if(Packet.Data_len != 0)
	{
		printf("Data[HEX] =");
		for(uint8_t cnt = 0 ; cnt <Packet.Data_len ; cnt++ )
		{
			printf("%02X ",Packet.data[cnt]);
		}
		printf("\t\t END \r\n");
	}
#endif

	switch(Packet.CMD)
	{
		case CMD_DISPENSE:
		{
			printf("Dispense go \r\n");
			Dispense();
			printf("end.... \r\n");
			break;
		}
	}

	//응답 보내는 루틴 추가
	Rx_uart2_cnt = 0;
	Rx_uart2_Pcnt = 0;
	Packet.status = Uart_WAIT;
}




void biz_loop(void)
{
	Uart_init();

	sensor_count=0;
	Sensor_Off();
	//=================================
	HAL_TIM_Base_Start_IT(&htim2);
	ref  = 1;
	for(int i=0; i<50; i++)
	{
	  HAL_GPIO_WritePin(LED_RED_GPIO_Port,LED_RED_Pin,RESET);//ON
	  printf("sen_ref1:%d, sen_ref2:%d, sen_ref3:%d, sen_ref4:%d\r\n",sen_ref1,sen_ref2,sen_ref3,sen_ref4);

	  HAL_Delay(50);
	  HAL_GPIO_WritePin(LED_RED_GPIO_Port,LED_RED_Pin,SET);//OFF
	  HAL_Delay(50);

	}
	ref  = 0;
	HAL_TIM_Base_Start_IT(&htim2);
	uint8_t data[32];
	printf(">>Ready!!\r\n");
	printf("sensor_1:%d, sensor_2:%d, sensor_3:%d, sensor_4:%d\r\n",mean_ch0,mean_ch1,mean_ch2,mean_ch3);
	//==================================
	printf("Biz go\r\n");
	while(1)
	{
		//422 Check
		if(Packet.status != Uart_End)
		{
			Uart_Parsser();
		}
		else if(Packet.status == Uart_End)
		{
			Cmd_Runner();
		}

//		printf("tick \r\n");
//		HAL_Delay(100);
	}
	printf("Biz Loop Error.... Reset....3s.... \r\n");
	HAL_Delay(3000);
	HAL_NVIC_SystemReset();

}
